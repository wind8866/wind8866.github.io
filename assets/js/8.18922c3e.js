(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{360:function(t,s,a){t.exports=a.p+"assets/img/function-wrap.524a716b.png"},415:function(t,s,a){"use strict";a.r(s);var n=a(44),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("arguments原型链")]),t._v(" "),n("ul",[n("li",[t._v("arg1")]),t._v(" "),n("li",[t._v("arg2")]),t._v(" "),n("li",[t._v("...")]),t._v(" "),n("li",[t._v("callee")]),t._v(" "),n("li",[t._v("length")]),t._v(" "),n("li",[t._v("Symbol()\n"),n("ul",[n("li",[n("code",[t._v("[[Scopes]]")])])])]),t._v(" "),n("li",[n("code",[t._v("__proto__")]),t._v(": Object")])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" location1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" location1_1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global1_1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" location2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wrap'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.1")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location1_1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.3")]),t._v("\n")])])]),n("p",[t._v("我们来尝试还原一下上面代码的执行流程"),n("br"),t._v(" "),n("strong",[t._v("1、首先函数声明提升，会先声明wrap")]),n("br"),t._v("\n创建局部函数是，会创建一个预先包含全局变量的作用域链，这个作用域链保存在内部的"),n("code",[t._v("[[Scope]]")]),t._v("中。"),n("br"),t._v("\n我们可以通过"),n("code",[t._v("console.dir(wrap)")]),t._v("（1.1处）来看一下。"),n("br"),t._v(" "),n("img",{attrs:{src:a(360),alt:"d"}}),n("br"),t._v("\n一个非常有意思的点，我们知道使用const声明的变量不会被添加到Global（window），所以这里的location1单独作为一个作用域链上的一员，而使用var声明的location1_1则包含在global作用域中。")]),t._v(" "),n("p",[t._v("那么如何理解“作用域链的本质是一个指向变量对象的指针列表，它只引用但不实际包含变量对象。”这句话呢？"),n("br"),t._v(" "),n("code",[t._v("[[Scope]]")]),t._v("中记录的只是执行环境作用域的引用（或说指针），因为location1_1与location1是在函数声明之后声明的。"),n("s",[t._v("个人感觉JS引擎会预先处理作用域链，所以在1.1打印的作用域链中包含这两个值。")]),t._v(" 机智如我，在1.1代码后面加各debugger断点(1.2处)打印的wrap没有这两个值。因为chrome控制台的"),n("code",[t._v("console")]),t._v("是"),n("code",[t._v("Value below was evaluated just now.")]),t._v("。console打印的值并不严格是代码执行到那一刻的值。"),n("br"),t._v("\n但此时"),n("code",[t._v("location1: undefined")]),t._v("有是什么鬼？不是说const不会命名提升吗？")]),t._v(" "),n("ul",[n("li",[t._v("[ ] 如何证明"),n("code",[t._v("[[Scope]]")]),t._v("保存的是指针")]),t._v(" "),n("li",[t._v("[ ] 为什么const前作用域链上会有location1？")])]),t._v(" "),n("p",[n("strong",[t._v("2、声明变量location1_1与location1")]),n("br"),t._v("\nvar存在变量声明提升，然后代码的执行顺序如下")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" location1_1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" location1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlocation1_1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global1_1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("strong",[t._v("3、执行wrap")]),n("br"),t._v(" "),n("strong",[t._v("3.2、console.log(location1, location2, location1_1)执行")]),n("br"),t._v("\n调用局部函数时，会为函数创建一个执行环境，然后通过复制函数的"),n("code",[t._v("[[Scope]]")]),t._v("属性中的对象构建起执行环境的作用域链。然后当前函数的作用域被创建并推入指向环境作用域链的前端。此时作用域链：")]),t._v(" "),n("ol",{attrs:{start:"0"}},[n("li",[t._v("wrap function: location2: 'wrap'")]),t._v(" "),n("li",[t._v("Script: { location1: 'global' }")]),t._v(" "),n("li",[t._v("Global: { location1_1: 'location1_1', ...}")])]),t._v(" "),n("p",[t._v("每次取变量值，都会在当前执行环境中的作用域链中依次寻找变量，如果找到则返回。如果找不到（该值没有在作用域链的任意环境中声明过），则报错。"),n("br"),t._v(" "),n("strong",[t._v("3.3、函数执行完成")]),n("br"),t._v("\n因为该函数的作用域是局部的（相对于global全局作用域），所以在执行完成后作用域链销毁，作用域链上的各个变量可以通过JavaScript的垃圾回收机制进行自动销毁。")]),t._v(" "),n("p",[n("strong",[t._v("总结")]),n("br"),t._v("\n如果再次执行wrap，则重复步骤3。"),n("br"),t._v("\n闭包的情况又会有差别，看下面的代码。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" location1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" location1_1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global1_1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" location2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wrap'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.2")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" location3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.0")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inner "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.0")]),t._v("\n")])])]),n("p",[n("strong",[t._v("4、wrap返回了一个函数")]),n("br"),t._v("\n执行wrap，该函数执行完成后，作用域链销毁。但此时返回了一个匿名函数。这个匿名函数被赋值给inner。inner的"),n("code",[t._v("[[Scope]]")]),t._v("包含了wrap的作用域，所以虽然wrap的作用域链销毁了，但是inner的作用域链还没销毁，wrap内的值就不会进入垃圾回收。")]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("当某个函数被调用时，会创建一个执行环境（execution context）及相应的作用域链。然后使用arguments和其他命名参数的值来初始化函数的活动对象（activation object）。"),n("br"),t._v("\n但在外部作用域中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第二位。。。一直到全局作用域。"),n("br"),t._v("\n后台的每个执行环境都有一个表示变量的对象--变量对象。全局环境的变量对象始终存在，局部环境变量只在函数执行过程中存在。"),n("br"),t._v("\n创建局部函数是，会创建一个预先包含全局变量的作用域链，这个作用域链保存在内部的"),n("code",[t._v("[[Scope]]")]),t._v("中。"),n("br"),t._v("\n调用局部函数时，会为函数创建一个执行环境，然后通过复制函数的"),n("code",[t._v("[[Scope]]")]),t._v("属性中的对象构建起执行环境的作用域链。然后当前函数的作用域被创建并推入指向环境作用域链的前端。作用域链的本质是一个指向变量对象的指针列表，它只引用但不实际包含变量对象。")]),t._v(" "),n("p",[t._v("一般情况下，局部对象执行完后会被立即销毁。但闭包的情况有所不同，因为活动对象的原型链上仍然应用局部对象，所以不会被销毁。创建对象的函数在执行完成后作用域链会被销毁。但创建对象在活动对象的作用域链上还存在。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" funInner "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("funWrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" wrap "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("funInner")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("funWrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("funInner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("hr"),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" function")]),t._v(" "),n("p",[t._v("闭包的作用"),n("br"),t._v("\n模块模式、增强模块模式"),n("br"),t._v("\n私有属性方法"),n("br"),t._v("\n增强单例的公共接口"),n("br"),t._v("\n构造函数模式"),n("br"),t._v("\n解决构造函数每个实例都创建一组方法占用内存的缺点"),n("br"),t._v("\n原型模式")])])}),[],!1,null,null,null);s.default=r.exports}}]);