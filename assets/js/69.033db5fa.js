(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{433:function(t,e,r){"use strict";r.r(e);var s=r(44),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"属性标志和属性描述符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性标志和属性描述符"}},[t._v("#")]),t._v(" 属性标志和属性描述符")]),t._v(" "),r("p",[t._v("configurable 设置为 false 后")]),t._v(" "),r("ul",[r("li",[t._v("不能修改 configurable 标志。")]),t._v(" "),r("li",[t._v("不能修改 enumerable 标志。")]),t._v(" "),r("li",[t._v("不能将 writable: false 修改为 true（反过来则可以）。")]),t._v(" "),r("li",[t._v("不能修改访问者属性的 get/set（但是如果没有可以分配它们）。")]),t._v(" "),r("li",[t._v("仍然可写")])]),t._v(" "),r("h2",{attrs:{id:"属性的-getter-和-setter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性的-getter-和-setter"}},[t._v("#")]),t._v(" 属性的 getter 和 setter")]),t._v(" "),r("p",[t._v("一个属性要么是访问器（具有 get/set 方法），要么是数据属性（具有 value），但不能两者都是。"),r("br"),t._v("\n当写入与获取的属性与其他属性有依赖关系时，使用 getter 或 setter 更适合。")])])}),[],!1,null,null,null);e.default=a.exports}}]);