(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{399:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("[toc]")]),t._v(" "),a("ul",[a("li",[t._v("[x] 遍历对象的所有方法")]),t._v(" "),a("li",[t._v("[x] 将hasOwnProperty加到遍历表之后")]),t._v(" "),a("li",[t._v("[x] for...of的可遍历性")]),t._v(" "),a("li",[t._v("[x] 哪些方法查自己的，哪些方法也查原型链上的")]),t._v(" "),a("li",[t._v("[x] "),a("a",{attrs:{href:"https://juejin.im/post/6844903828580466702",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript对象的数据属性与访问器属性"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("[x] create是不是new Person的语法糖（并不是）")]),t._v(" "),a("li",[t._v("[x] delete操作符其他的坑")]),t._v(" "),a("li",[t._v("[ ] 参考"),a("a",{attrs:{href:"https://wangdoc.com/javascript/stdlib/object.html#tostring-%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("写一个类型判断的函数")]),t._v(" "),a("li",[t._v("[ ] 对象的拷贝")]),t._v(" "),a("li",[t._v("[x] 补全遍历表")])]),t._v(" "),a("p",[t._v("不重要")]),t._v(" "),a("ul",[a("li",[t._v("[ ] Array、Number、Date针对toLocaleString的扩展")]),t._v(" "),a("li",[t._v("[ ] 继承了Object的对象都实现了什么样的valueOf和toString")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),a("p",[t._v("对象就是一组无序的键值对。"),a("br"),t._v("\n键值可以是字符串或Symbol。"),a("br"),t._v("\nJavaScript 规定，如果行首是大括号，一律解释为语句（即代码块）。如果要解释为表达式（即对象），必须在大括号前加上圆括号。")]),t._v(" "),a("h4",{attrs:{id:"delete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" delete")]),t._v(" "),a("p",[t._v("delete 命令可以删除对象的属性。"),a("br"),t._v("\n只能删除自己有的，不能删除继承的。"),a("br"),t._v("\n只有一种情况，delete命令会返回false，那就是该属性存在，且不得删除。")]),t._v(" "),a("p",[t._v("delete删除是完全删除，不是设置为undefined。"),a("br"),t._v("\n使用var、const、let声明的变量不会被删除，都会返回false，即使使用var声明的变量会添加到window.var1，"),a("code",[t._v("delete window.var1")]),t._v("也是返回false。"),a("br"),t._v("\n不使用任何声明关键字创建的全局变量，可以被delete删除")]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/delete",target:"_blank",rel:"noopener noreferrer"}},[t._v("NMD delete 操作符"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/149975274",target:"_blank",rel:"noopener noreferrer"}},[t._v("我不知道的JS之delete操作符"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in"}},[t._v("#")]),t._v(" in")]),t._v(" "),a("p",[t._v("可以判断对象是否拥有某个属性，返回布尔值。"),a("br"),t._v("\n无论是对象自身的，还是继承的都检查。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h4",{attrs:{id:"for-in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in"}},[t._v("#")]),t._v(" for in")]),t._v(" "),a("p",[t._v("只能遍历可遍历对象，遍历自身和继承的属性。")]),t._v(" "),a("h4",{attrs:{id:"with"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with"}},[t._v("#")]),t._v(" with")]),t._v(" "),a("p",[t._v("可以很方便的给对象"),a("s",[t._v("赋值")]),t._v("修改值。"),a("br"),t._v("\n如果属性值不存在，会造成全局变量，所以不推荐使用。")]),t._v(" "),a("h2",{attrs:{id:"es6新增语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6新增语法"}},[t._v("#")]),t._v(" ES6新增语法")]),t._v(" "),a("h3",{attrs:{id:"可直接写入变量或函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可直接写入变量或函数"}},[t._v("#")]),t._v(" 可直接写入变量或函数")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("speak")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意这里this指向globel，详见函数章节")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("food")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'哎，没吃呢，还没吃。。。嗷！。。嗷！'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    speak"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"属性名表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性名表达式"}},[t._v("#")]),t._v(" 属性名表达式")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" propKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("propKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"方法的-name-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法的-name-属性"}},[t._v("#")]),t._v(" 方法的 name 属性")]),t._v(" "),a("p",[t._v("函数的name属性，返回函数名。对象方法也是函数，因此也有name属性。")]),t._v(" "),a("h3",{attrs:{id:"属性的可枚举性和遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性的可枚举性和遍历"}},[t._v("#")]),t._v(" 属性的可枚举性和遍历")]),t._v(" "),a("p",[t._v("对象的每个属性都有一个描述对象（Descriptor），用来控制该属性的行为。"),a("br"),t._v("\n描述对象的enumerable属性，称为“可枚举性”，如果该属性为false，就表示某些操作会忽略当前属性。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    value: 123,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    writable: true,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    enumerable: true,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    configurable: true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  }")]),t._v("\n")])])]),a("p",[t._v("下面4种方法遍历时会忽略不可枚举属性：")]),t._v(" "),a("ul",[a("li",[t._v("for...in循环：只遍历对象自身的和继承的可枚举的属性。")]),t._v(" "),a("li",[t._v("Object.keys()：返回对象自身的所有可枚举的属性的键名。")]),t._v(" "),a("li",[t._v("JSON.stringify()：只串行化对象自身的可枚举的属性。")]),t._v(" "),a("li",[t._v("Object.assign()： 忽略enumerable为false的属性，只拷贝对象自身的可枚举的属性。")])]),t._v(" "),a("p",[t._v("引入“可枚举”（enumerable）这个概念的最初目的，就是让某些属性可以规避掉"),a("code",[t._v("for...in")]),t._v("操作，不然所有内部属性和方法都会被遍历到。"),a("br"),t._v("\n尽量不要用for...in循环，而用Object.keys()代替。"),a("br"),t._v("\n另外，ES6 规定，所有 Class 的原型的方法都是不可枚举的。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/object#%E5%B1%9E%E6%80%A7%E7%9A%84%E9%81%8D%E5%8E%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性的遍历"),a("OutboundLink")],1)]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("自身可枚举")]),t._v(" "),a("th",[t._v("自身不可枚举")]),t._v(" "),a("th",[t._v("原型可枚举")]),t._v(" "),a("th",[t._v("原型不可枚举")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("for...in")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Object.keys()、Object.values()、Object.entries()")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[a("code",[t._v("[key]")]),t._v("、"),a("code",[t._v("[value]")]),t._v("、"),a("code",[t._v("[key, value]")])])]),t._v(" "),a("tr",[a("td",[t._v("JSON.stringify()")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("串行化")])]),t._v(" "),a("tr",[a("td",[t._v("Object.assign()")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("拷贝")])]),t._v(" "),a("tr",[a("td",[t._v("Object.getOwnPropertyNames()")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[a("code",[t._v("[key]")])])]),t._v(" "),a("tr",[a("td",[t._v("Object.getOwnPropertySymbols(obj)")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("返回只包含Symbol键名数组")])]),t._v(" "),a("tr",[a("td",[t._v("Reflect.ownKeys")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("返回所有键名数(包含Symbol)")])]),t._v(" "),a("tr",[a("td",[t._v("for...of")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("遍历值")])]),t._v(" "),a("tr",[a("td",[t._v("解构...")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("解构")])])])]),t._v(" "),a("p",[t._v("数组的遍历不会出现以上问题")]),t._v(" "),a("p",[t._v("其他："),a("br"),t._v(" "),a("strong",[t._v("in操作符：")]),a("br"),t._v("\n自身属性和原型链上可遍历的值都会返回true"),a("br"),t._v(" "),a("strong",[t._v("cat1.hasOwnProperty(key)：")]),a("br"),t._v("\nkey是否是cat1对象上的属性"),a("br"),t._v(" "),a("strong",[t._v("cat1.propertyIsEnumerable(key)")]),a("br"),t._v("\n判断自身属性key是否可遍历")]),t._v(" "),a("p",[a("strong",[t._v("示例代码")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("call")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sound "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'汪汪汪'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'旺财'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["name"]')]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["name"]')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name call")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dog"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true，这是因为Object.prototype.toString设置了不可遍历")]),t._v("\n")])])]),a("p",[a("strong",[t._v("总结")]),a("br"),t._v("\n只有for...in才可枚举原型链上的属性。一般情况下用不到，所以尽量避免使用for...in"),a("br"),t._v("\n一般常用的方法都不会遍历不可枚举的属性，放心使用。")]),t._v(" "),a("h3",{attrs:{id:"super"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#super"}},[t._v("#")]),t._v(" super")]),t._v(" "),a("p",[t._v("this关键字总是指向方法所在的当前对象"),a("br"),t._v("\nsuper指向当前对象的原型对象")]),t._v(" "),a("h3",{attrs:{id:"对象的扩展运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的扩展运算符"}},[t._v("#")]),t._v(" 对象的扩展运算符")]),t._v(" "),a("p",[t._v("解构赋值同样是可遍历对象才可以。"),a("br"),t._v("\n解构赋值是浅拷贝")]),t._v(" "),a("p",[t._v("扩展运算符可以用来解构对象，也可以用来拷贝赋值"),a("br"),t._v("\n解构与扩展运算符完全是两种概念。")]),t._v(" "),a("blockquote",[a("p",[t._v("对象的解构赋值可以取到继承的属性"),a("br"),t._v(" "),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/destructuring#%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://es6.ruanyifeng.com/#docs/destructuring#对象的解构赋值"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"链判断运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链判断运算符"}},[t._v("#")]),t._v(" 链判断运算符")]),t._v(" "),a("p",[t._v("ES2020增加")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),t._v("firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("?.运算符相当于一种短路机制，只要不满足条件，就不再往下执行。"),a("br"),t._v("\n对于对象或函数使用，会判断"),a("code",[t._v("?.")]),t._v("前的值是否可以取"),a("code",[t._v("?.")]),t._v("属性，不能则返回undefined。"),a("br"),t._v("\n对于函数调用来说，若"),a("code",[t._v("?.")]),t._v("前不是可调用函数，则返回undefined。")]),t._v(" "),a("h3",{attrs:{id:"null判断运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null判断运算符"}},[t._v("#")]),t._v(" Null判断运算符")]),t._v(" "),a("p",[t._v("ES2020增加"),a("br"),t._v(" "),a("code",[t._v("??")]),t._v(" 可以判断前面的值是否是null或undefined，如果是，则返回后面的值。")]),t._v(" "),a("p",[t._v("想给对象赋默认值时，以前都是这么写")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("但是会出现"),a("code",[t._v("response.age")]),t._v("为0或false的情况，所以这种写法有瑕疵。"),a("br"),t._v(" "),a("code",[t._v("??")]),t._v("就是为了解决了这个问题，只有前面是null或undefined时，才会返回后面那个值。")]),t._v(" "),a("h3",{attrs:{id:"新增方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增方法"}},[t._v("#")]),t._v(" 新增方法")]),t._v(" "),a("h4",{attrs:{id:"object-is"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-is"}},[t._v("#")]),t._v(" "),a("code",[t._v("Object.is()")])]),t._v(" "),a("p",[t._v("与"),a("code",[t._v("===")]),t._v("的区别")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h4",{attrs:{id:"object-assign-target-obj1-obj2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-target-obj1-obj2"}},[t._v("#")]),t._v(" Object.assign(target, obj1, obj2)")]),t._v(" "),a("p",[t._v("将obj1和obj2上的可遍历属性都拷贝到target上。"),a("br"),t._v("\n特性")]),t._v(" "),a("ul",[a("li",[t._v("浅拷贝")]),t._v(" "),a("li",[t._v("同名属性会替换")]),t._v(" "),a("li",[t._v("会把数组视为对象，按索引替换")]),t._v(" "),a("li",[t._v("会对取值函数get求值后再拷贝")])]),t._v(" "),a("h4",{attrs:{id:"object-getownpropertydescriptors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertydescriptors"}},[t._v("#")]),t._v(" Object.getOwnPropertyDescriptors()")]),t._v(" "),a("p",[t._v("会返回某个对象属性的描述对象（descriptor），类似"),a("code",[t._v("Object.getOwnPropertyDescriptor()")]),a("br"),t._v("\n引入目的，主要是为了解决Object.assign()无法正确拷贝get属性和set属性的问题。")]),t._v(" "),a("h4",{attrs:{id:"proto-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proto-属性"}},[t._v("#")]),t._v(" "),a("code",[t._v("__proto__")]),t._v("属性")]),t._v(" "),a("p",[t._v("只有浏览器必须部署这个属性，其他运行环境不一定需要部署。"),a("br"),t._v("\n用Object.setPrototypeOf()（写操作）、Object.getPrototypeOf()（读操作）、Object.create()（生成操作）代替。")]),t._v(" "),a("h3",{attrs:{id:"object-setprototypeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-setprototypeof"}},[t._v("#")]),t._v(" Object.setPrototypeOf()")]),t._v(" "),a("p",[t._v("设置对象的原型")]),t._v(" "),a("h3",{attrs:{id:"object-getprototypeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-getprototypeof"}},[t._v("#")]),t._v(" Object.getPrototypeOf()")]),t._v(" "),a("p",[t._v("获取对象的原型")]),t._v(" "),a("h3",{attrs:{id:"新增遍历方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增遍历方法"}},[t._v("#")]),t._v(" 新增遍历方法")]),t._v(" "),a("ul",[a("li",[t._v("Object.keys(): 键的数组")]),t._v(" "),a("li",[t._v("Object.values(): 值的数组")]),t._v(" "),a("li",[t._v("Object.entries(): 将对象转化为键值对")]),t._v(" "),a("li",[t._v("Object.fromEntries(): 将键值对转化为对象")])]),t._v(" "),a("h2",{attrs:{id:"属性描述对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性描述对象"}},[t._v("#")]),t._v(" 属性描述对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("value: 属性值，默认undefned，只要writable和configurable有一个为true，就允许改动。")])]),t._v(" "),a("li",[a("p",[t._v("writable: 是否可写，默认true")])]),t._v(" "),a("li",[a("p",[t._v("enumerable: 是否可遍历，默认为true")])]),t._v(" "),a("li",[a("p",[t._v("configurable: 是否可配置，即描述对象的可写性（false除了value都不可改变），还不能被delete删除")])]),t._v(" "),a("li",[a("p",[t._v("get: 取值函数，默认为undefined")])]),t._v(" "),a("li",[a("p",[t._v("set: 存值函数，默认为undefined")])]),t._v(" "),a("li",[a("p",[t._v("Object.getOwnPropertyDescriptor(obj, name)")]),t._v(" "),a("ul",[a("li",[t._v("获取属性描述对象")]),t._v(" "),a("li",[t._v("只能用于对象自身的属性，不能用于继承的属性")])])]),t._v(" "),a("li",[a("p",[t._v("Object.getOwnPropertyNames(obj)")]),t._v(" "),a("ul",[a("li",[t._v("方法返回一个数组，数组值是对象自身的全部属性的属性名，不管该属性是否可遍历")])])]),t._v(" "),a("li",[a("p",[t._v("Object.defineProperty(object, propertyName, attributesObject)")]),t._v(" "),a("ul",[a("li",[t._v("通过属性描述对象定义或修改一个属性，返回修改后的对象")]),t._v(" "),a("li",[t._v("注意，一旦定义了取值函数get（或存值函数set），就不能将writable属性设为true，或者同时定义value属性，否则会报错")]),t._v(" "),a("li",[t._v("注意设置时writable、enumerable、configurable默认值都是false，这与直接定义出来的对象属性的默认值相反")])])]),t._v(" "),a("li",[a("p",[t._v("Object.defineProperties()")]),t._v(" "),a("ul",[a("li",[t._v("同上（Object.defineProperty），可一次定义多个")])])]),t._v(" "),a("li",[a("p",[t._v("Object.prototype.propertyIsEnumerable()")]),t._v(" "),a("ul",[a("li",[t._v("返回布尔值，判断对象自身的属性是否可遍历，继承来的属性都返回false")])])]),t._v(" "),a("li",[a("p",[t._v("Object.preventExtensions()")]),t._v(" "),a("ul",[a("li",[t._v("无法添加新属性")])])]),t._v(" "),a("li",[a("p",[t._v("Object.isExtensible()")]),t._v(" "),a("ul",[a("li",[t._v("检查是否可添加新属性（是否使用了Object.preventExtensions()）")])])]),t._v(" "),a("li",[a("p",[t._v("Object.seal()")]),t._v(" "),a("ul",[a("li",[t._v("既无法添加新属性也无法删除旧属性")]),t._v(" "),a("li",[t._v("实质是把属性描述对象的configurable属性设为false")]),t._v(" "),a("li",[t._v("只是禁止新增或删除属性，并不影响修改某个属性的值。")])])]),t._v(" "),a("li",[a("p",[t._v("Object.isSealed()")]),t._v(" "),a("ul",[a("li",[t._v("否使用了Object.seal方法")])])]),t._v(" "),a("li",[a("p",[t._v("Object.freeze()")]),t._v(" "),a("ul",[a("li",[t._v("使得一个对象无法添加新属性、无法删除旧属性、也无法改变属性的值，使得这个对象实际上变成了常量。")])])]),t._v(" "),a("li",[a("p",[t._v("Object.isFrozen()")]),t._v(" "),a("ul",[a("li",[t._v("检查一个对象是否使用了Object.freeze方法。")])])])]),t._v(" "),a("p",[t._v("上面的三个方法锁定对象的可写性有一个漏洞：可以通过改变原型对象，来为对象增加属性。"),a("br"),t._v("\n一种解决方案是，把obj的原型也冻结住。")]),t._v(" "),a("h4",{attrs:{id:"存取器的写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存取器的写法"}},[t._v("#")]),t._v(" 存取器的写法")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// configurable和enumerable都为false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setter: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "getter"')]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "setter: 123"')]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法二")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// configurable和enumerable都为true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setter: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"object-defineproperty的用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty的用法"}},[t._v("#")]),t._v(" Object.defineProperty的用法")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  writable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  enumerable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法(6⃣️ === ES6)")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("分类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("length")]),t._v(" "),a("td",[t._v("值为1，不可直接赋值")]),t._v(" "),a("td",[t._v("静态属性")])]),t._v(" "),a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("值为'Object'")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("prototype")]),t._v(" "),a("td",[t._v("指向Object的原型对象")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Object()")]),t._v(" "),a("td",[t._v("将任意值转为对象"),a("br"),t._v("null返回"),a("code",[t._v("{}")]),a("br"),t._v("对象直接返回该对象"),a("br"),t._v("基本类型被转换为基本包装类型")]),t._v(" "),a("td",[t._v("静态方法")])]),t._v(" "),a("tr",[a("td",[t._v("new Object()")]),t._v(" "),a("td",[t._v("与Object()类似，不过该方法的意义是新增一个对象")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("keys()")]),t._v(" "),a("td",[t._v("返回对象自身的可枚举键名，数组形式")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("getOwnPropertyNames()")]),t._v(" "),a("td",[t._v("本身所有属性，无论是否可遍历")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("assign()")]),t._v(" "),a("td",[t._v("拷贝源对象自身的并且可枚举的属性到目标对象")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("getOwnPropertySymbols()")]),t._v(" "),a("td",[t._v("返回一个给定对象自身的所有 Symbol 属性的数组")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("is()")]),t._v(" "),a("td",[t._v("两个值是否为同一个值，与"),a("code",[t._v("===")]),t._v("类似但不相同")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("entries()")]),t._v(" "),a("td",[t._v("返回一个给定对象自身可枚举属性的键值对数组")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("fromEntries([[key: value]])")])]),t._v(" "),a("td",[t._v("方法把键值对列表转换为一个对象")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("values()")]),t._v(" "),a("td",[t._v("返回一个给定对象自身的所有可枚举属性值的数组")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("propertyIsEnumerable()")]),t._v(" "),a("td",[t._v("判断对象自身的属性是否可遍历，继承来的属性都返回false")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("create()")]),t._v(" "),a("td",[t._v("创建一个新对象，使用现有的对象来提供新创建的对象的__proto__")]),t._v(" "),a("td",[t._v("-原型相关")])]),t._v(" "),a("tr",[a("td",[t._v("getPrototypeOf()")]),t._v(" "),a("td",[t._v("获取对象的原型")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("setPrototypeOf()")]),t._v(" "),a("td",[t._v("设置对象的原型")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("getOwnPropertyDescriptor()🔧")]),t._v(" "),a("td",[t._v("获取属性描述对象")]),t._v(" "),a("td",[t._v("-属性描述对象")])]),t._v(" "),a("tr",[a("td",[t._v("getOwnPropertyDescriptors()")]),t._v(" "),a("td",[t._v("同上，返回多个")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("defineProperty()")]),t._v(" "),a("td",[t._v("通过属性描述对象定义或修改一个属性")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("defineProperties()")]),t._v(" "),a("td",[t._v("同上，修改多个")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("preventExtensions()")]),t._v(" "),a("td",[t._v("不可添加新属性")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("isExtensible()")]),t._v(" "),a("td",[t._v("检查是否使用了Object.preventExtensions方法")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("seal()")]),t._v(" "),a("td",[t._v("既无法添加新属性也无法删除旧属性")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("isSealed()")]),t._v(" "),a("td",[t._v("是否使用了Object.seal方法")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("freeze()")]),t._v(" "),a("td",[t._v("无法添加新属性、无法删除旧属性、也无法改变属性的值，变成常量")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("isFrozen()")]),t._v(" "),a("td",[t._v("是否使用了Object.freeze方法")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("实例属性")])]),t._v(" "),a("tr",[a("td",[t._v("constructor()")]),t._v(" "),a("td",[t._v("获取当前对象的构造函数")]),t._v(" "),a("td",[t._v("实例方法")])]),t._v(" "),a("tr",[a("td",[t._v("hasOwnProperty('str')")]),t._v(" "),a("td",[t._v("对象自身是否有str属性")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("isPrototypeOf(target)")]),t._v(" "),a("td",[t._v("当前对象是否在target的原型链上")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("toString()")]),t._v(" "),a("td",[t._v('对象类型字符串"[object Object]"')]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("valueOf()")]),t._v(" "),a("td",[t._v("返回对象自身，用于自动类型转换")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("toLocaleString()")]),t._v(" "),a("td",[t._v('与toString类似，返回"[object Object]"')]),t._v(" "),a("td")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);