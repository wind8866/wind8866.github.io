(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{446:function(e,t,a){"use strict";a.r(t);var s=a(44),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"body-parser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#body-parser"}},[e._v("#")]),e._v(" body-parser")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://npmjs.org/package/body-parser",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/body-parser.svg",alt:"NPM Version"}}),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://npmjs.org/package/body-parser",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dm/body-parser.svg",alt:"NPM Downloads"}}),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://travis-ci.org/expressjs/body-parser",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/travis/expressjs/body-parser/master.svg",alt:"Build Status"}}),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://coveralls.io/r/expressjs/body-parser?branch=master",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/coveralls/expressjs/body-parser/master.svg",alt:"Test Coverage"}}),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Node.js body parsing middleware.")]),e._v(" "),a("p",[e._v("Parse incoming request bodies in a middleware before your handlers, available"),a("br"),e._v("\nunder the "),a("code",[e._v("req.body")]),e._v(" property.")]),e._v(" "),a("p",[a("strong",[e._v("Note")]),e._v(" As "),a("code",[e._v("req.body")]),e._v("'s shape is based on user-controlled input, all"),a("br"),e._v("\nproperties and values in this object are untrusted and should be validated"),a("br"),e._v("\nbefore trusting. For example, "),a("code",[e._v("req.body.foo.toString()")]),e._v(" may fail in multiple"),a("br"),e._v("\nways, for example the "),a("code",[e._v("foo")]),e._v(" property may not be there or may not be a string,"),a("br"),e._v("\nand "),a("code",[e._v("toString")]),e._v(" may not be a function and instead a string or other user input.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn about the anatomy of an HTTP transaction in Node.js"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[a("em",[e._v("This does not handle multipart bodies")]),e._v(", due to their complex and typically"),a("br"),e._v("\nlarge nature. For multipart bodies, you may be interested in the following"),a("br"),e._v("\nmodules:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.org/package/busboy#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("busboy"),a("OutboundLink")],1),e._v(" and"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/connect-busboy#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("connect-busboy"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.org/package/multiparty#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("multiparty"),a("OutboundLink")],1),e._v(" and"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/connect-multiparty#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("connect-multiparty"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.org/package/formidable#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("formidable"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.org/package/multer#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("multer"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("This module provides the following parsers:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#bodyparserjsonoptions"}},[e._v("JSON body parser")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#bodyparserrawoptions"}},[e._v("Raw body parser")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#bodyparsertextoptions"}},[e._v("Text body parser")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#bodyparserurlencodedoptions"}},[e._v("URL-encoded form body parser")])])]),e._v(" "),a("p",[e._v("Other body parsers you might be interested in:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.org/package/body#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("body"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.org/package/co-body#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("co-body"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" body-parser\n")])])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" API")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" bodyParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'body-parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("p",[e._v("The "),a("code",[e._v("bodyParser")]),e._v(" object exposes various factories to create middlewares. All"),a("br"),e._v("\nmiddlewares will populate the "),a("code",[e._v("req.body")]),e._v(" property with the parsed body when"),a("br"),e._v("\nthe "),a("code",[e._v("Content-Type")]),e._v(" request header matches the "),a("code",[e._v("type")]),e._v(" option, or an empty"),a("br"),e._v("\nobject ("),a("code",[e._v("{}")]),e._v(") if there was no body to parse, the "),a("code",[e._v("Content-Type")]),e._v(" was not matched,"),a("br"),e._v("\nor an error occurred.")]),e._v(" "),a("p",[e._v("The various errors returned by this module are described in the"),a("br"),e._v(" "),a("a",{attrs:{href:"#errors"}},[e._v("errors section")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"bodyparser-json-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bodyparser-json-options"}},[e._v("#")]),e._v(" bodyParser.json([options])")]),e._v(" "),a("p",[e._v("Returns middleware that only parses "),a("code",[e._v("json")]),e._v(" and only looks at requests where"),a("br"),e._v("\nthe "),a("code",[e._v("Content-Type")]),e._v(" header matches the "),a("code",[e._v("type")]),e._v(" option. This parser accepts any"),a("br"),e._v("\nUnicode encoding of the body and supports automatic inflation of "),a("code",[e._v("gzip")]),e._v(" and"),a("br"),e._v(" "),a("code",[e._v("deflate")]),e._v(" encodings.")]),e._v(" "),a("p",[e._v("A new "),a("code",[e._v("body")]),e._v(" object containing the parsed data is populated on the "),a("code",[e._v("request")]),a("br"),e._v("\nobject after the middleware (i.e. "),a("code",[e._v("req.body")]),e._v(").")]),e._v(" "),a("h4",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" Options")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("json")]),e._v(" function takes an optional "),a("code",[e._v("options")]),e._v(" object that may contain any of"),a("br"),e._v("\nthe following keys:")]),e._v(" "),a("h5",{attrs:{id:"inflate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inflate"}},[e._v("#")]),e._v(" inflate")]),e._v(" "),a("p",[e._v("When set to "),a("code",[e._v("true")]),e._v(", then deflated (compressed) bodies will be inflated; when"),a("br"),e._v(" "),a("code",[e._v("false")]),e._v(", deflated bodies are rejected. Defaults to "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[e._v("#")]),e._v(" limit")]),e._v(" "),a("p",[e._v("Controls the maximum request body size. If this is a number, then the value"),a("br"),e._v("\nspecifies the number of bytes; if it is a string, the value is passed to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/bytes",target:"_blank",rel:"noopener noreferrer"}},[e._v("bytes"),a("OutboundLink")],1),e._v(" library for parsing. Defaults"),a("br"),e._v("\nto "),a("code",[e._v("'100kb'")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"reviver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reviver"}},[e._v("#")]),e._v(" reviver")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("reviver")]),e._v(" option is passed directly to "),a("code",[e._v("JSON.parse")]),e._v(" as the second"),a("br"),e._v("\nargument. You can find more information on this argument"),a("br"),e._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter",target:"_blank",rel:"noopener noreferrer"}},[e._v("in the MDN documentation about JSON.parse"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"strict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strict"}},[e._v("#")]),e._v(" strict")]),e._v(" "),a("p",[e._v("When set to "),a("code",[e._v("true")]),e._v(", will only accept arrays and objects; when "),a("code",[e._v("false")]),e._v(" will"),a("br"),e._v("\naccept anything "),a("code",[e._v("JSON.parse")]),e._v(" accepts. Defaults to "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("type")]),e._v(" option is used to determine what media type the middleware will"),a("br"),e._v("\nparse. This option can be a string, array of strings, or a function. If not a"),a("br"),e._v("\nfunction, "),a("code",[e._v("type")]),e._v(" option is passed directly to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/type-is#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-is"),a("OutboundLink")],1),e._v(" library and this can"),a("br"),e._v("\nbe an extension name (like "),a("code",[e._v("json")]),e._v("), a mime type (like "),a("code",[e._v("application/json")]),e._v("), or"),a("br"),e._v("\na mime type with a wildcard (like "),a("code",[e._v("*/*")]),e._v(" or "),a("code",[e._v("*/json")]),e._v("). If a function, the "),a("code",[e._v("type")]),a("br"),e._v("\noption is called as "),a("code",[e._v("fn(req)")]),e._v(" and the request is parsed if it returns a truthy"),a("br"),e._v("\nvalue. Defaults to "),a("code",[e._v("application/json")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"verify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify"}},[e._v("#")]),e._v(" verify")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("verify")]),e._v(" option, if supplied, is called as "),a("code",[e._v("verify(req, res, buf, encoding)")]),e._v(","),a("br"),e._v("\nwhere "),a("code",[e._v("buf")]),e._v(" is a "),a("code",[e._v("Buffer")]),e._v(" of the raw request body and "),a("code",[e._v("encoding")]),e._v(" is the"),a("br"),e._v("\nencoding of the request. The parsing can be aborted by throwing an error.")]),e._v(" "),a("h3",{attrs:{id:"bodyparser-raw-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bodyparser-raw-options"}},[e._v("#")]),e._v(" bodyParser.raw([options])")]),e._v(" "),a("p",[e._v("Returns middleware that parses all bodies as a "),a("code",[e._v("Buffer")]),e._v(" and only looks at"),a("br"),e._v("\nrequests where the "),a("code",[e._v("Content-Type")]),e._v(" header matches the "),a("code",[e._v("type")]),e._v(" option. This"),a("br"),e._v("\nparser supports automatic inflation of "),a("code",[e._v("gzip")]),e._v(" and "),a("code",[e._v("deflate")]),e._v(" encodings.")]),e._v(" "),a("p",[e._v("A new "),a("code",[e._v("body")]),e._v(" object containing the parsed data is populated on the "),a("code",[e._v("request")]),a("br"),e._v("\nobject after the middleware (i.e. "),a("code",[e._v("req.body")]),e._v("). This will be a "),a("code",[e._v("Buffer")]),e._v(" object"),a("br"),e._v("\nof the body.")]),e._v(" "),a("h4",{attrs:{id:"options-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-2"}},[e._v("#")]),e._v(" Options")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("raw")]),e._v(" function takes an optional "),a("code",[e._v("options")]),e._v(" object that may contain any of"),a("br"),e._v("\nthe following keys:")]),e._v(" "),a("h5",{attrs:{id:"inflate-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inflate-2"}},[e._v("#")]),e._v(" inflate")]),e._v(" "),a("p",[e._v("When set to "),a("code",[e._v("true")]),e._v(", then deflated (compressed) bodies will be inflated; when"),a("br"),e._v(" "),a("code",[e._v("false")]),e._v(", deflated bodies are rejected. Defaults to "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"limit-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit-2"}},[e._v("#")]),e._v(" limit")]),e._v(" "),a("p",[e._v("Controls the maximum request body size. If this is a number, then the value"),a("br"),e._v("\nspecifies the number of bytes; if it is a string, the value is passed to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/bytes",target:"_blank",rel:"noopener noreferrer"}},[e._v("bytes"),a("OutboundLink")],1),e._v(" library for parsing. Defaults"),a("br"),e._v("\nto "),a("code",[e._v("'100kb'")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"type-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-2"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("type")]),e._v(" option is used to determine what media type the middleware will"),a("br"),e._v("\nparse. This option can be a string, array of strings, or a function."),a("br"),e._v("\nIf not a function, "),a("code",[e._v("type")]),e._v(" option is passed directly to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/type-is#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-is"),a("OutboundLink")],1),e._v(" library and this"),a("br"),e._v("\ncan be an extension name (like "),a("code",[e._v("bin")]),e._v("), a mime type (like"),a("br"),e._v(" "),a("code",[e._v("application/octet-stream")]),e._v("), or a mime type with a wildcard (like "),a("code",[e._v("*/*")]),e._v(" or"),a("br"),e._v(" "),a("code",[e._v("application/*")]),e._v("). If a function, the "),a("code",[e._v("type")]),e._v(" option is called as "),a("code",[e._v("fn(req)")]),a("br"),e._v("\nand the request is parsed if it returns a truthy value. Defaults to"),a("br"),e._v(" "),a("code",[e._v("application/octet-stream")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"verify-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-2"}},[e._v("#")]),e._v(" verify")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("verify")]),e._v(" option, if supplied, is called as "),a("code",[e._v("verify(req, res, buf, encoding)")]),e._v(","),a("br"),e._v("\nwhere "),a("code",[e._v("buf")]),e._v(" is a "),a("code",[e._v("Buffer")]),e._v(" of the raw request body and "),a("code",[e._v("encoding")]),e._v(" is the"),a("br"),e._v("\nencoding of the request. The parsing can be aborted by throwing an error.")]),e._v(" "),a("h3",{attrs:{id:"bodyparser-text-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bodyparser-text-options"}},[e._v("#")]),e._v(" bodyParser.text([options])")]),e._v(" "),a("p",[e._v("Returns middleware that parses all bodies as a string and only looks at"),a("br"),e._v("\nrequests where the "),a("code",[e._v("Content-Type")]),e._v(" header matches the "),a("code",[e._v("type")]),e._v(" option. This"),a("br"),e._v("\nparser supports automatic inflation of "),a("code",[e._v("gzip")]),e._v(" and "),a("code",[e._v("deflate")]),e._v(" encodings.")]),e._v(" "),a("p",[e._v("A new "),a("code",[e._v("body")]),e._v(" string containing the parsed data is populated on the "),a("code",[e._v("request")]),a("br"),e._v("\nobject after the middleware (i.e. "),a("code",[e._v("req.body")]),e._v("). This will be a string of the"),a("br"),e._v("\nbody.")]),e._v(" "),a("h4",{attrs:{id:"options-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-3"}},[e._v("#")]),e._v(" Options")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("text")]),e._v(" function takes an optional "),a("code",[e._v("options")]),e._v(" object that may contain any of"),a("br"),e._v("\nthe following keys:")]),e._v(" "),a("h5",{attrs:{id:"defaultcharset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defaultcharset"}},[e._v("#")]),e._v(" defaultCharset")]),e._v(" "),a("p",[e._v("Specify the default character set for the text content if the charset is not"),a("br"),e._v("\nspecified in the "),a("code",[e._v("Content-Type")]),e._v(" header of the request. Defaults to "),a("code",[e._v("utf-8")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"inflate-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inflate-3"}},[e._v("#")]),e._v(" inflate")]),e._v(" "),a("p",[e._v("When set to "),a("code",[e._v("true")]),e._v(", then deflated (compressed) bodies will be inflated; when"),a("br"),e._v(" "),a("code",[e._v("false")]),e._v(", deflated bodies are rejected. Defaults to "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"limit-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit-3"}},[e._v("#")]),e._v(" limit")]),e._v(" "),a("p",[e._v("Controls the maximum request body size. If this is a number, then the value"),a("br"),e._v("\nspecifies the number of bytes; if it is a string, the value is passed to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/bytes",target:"_blank",rel:"noopener noreferrer"}},[e._v("bytes"),a("OutboundLink")],1),e._v(" library for parsing. Defaults"),a("br"),e._v("\nto "),a("code",[e._v("'100kb'")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"type-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-3"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("type")]),e._v(" option is used to determine what media type the middleware will"),a("br"),e._v("\nparse. This option can be a string, array of strings, or a function. If not"),a("br"),e._v("\na function, "),a("code",[e._v("type")]),e._v(" option is passed directly to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/type-is#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-is"),a("OutboundLink")],1),e._v(" library and this can"),a("br"),e._v("\nbe an extension name (like "),a("code",[e._v("txt")]),e._v("), a mime type (like "),a("code",[e._v("text/plain")]),e._v("), or a mime"),a("br"),e._v("\ntype with a wildcard (like "),a("code",[e._v("*/*")]),e._v(" or "),a("code",[e._v("text/*")]),e._v("). If a function, the "),a("code",[e._v("type")]),a("br"),e._v("\noption is called as "),a("code",[e._v("fn(req)")]),e._v(" and the request is parsed if it returns a"),a("br"),e._v("\ntruthy value. Defaults to "),a("code",[e._v("text/plain")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"verify-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-3"}},[e._v("#")]),e._v(" verify")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("verify")]),e._v(" option, if supplied, is called as "),a("code",[e._v("verify(req, res, buf, encoding)")]),e._v(","),a("br"),e._v("\nwhere "),a("code",[e._v("buf")]),e._v(" is a "),a("code",[e._v("Buffer")]),e._v(" of the raw request body and "),a("code",[e._v("encoding")]),e._v(" is the"),a("br"),e._v("\nencoding of the request. The parsing can be aborted by throwing an error.")]),e._v(" "),a("h3",{attrs:{id:"bodyparser-urlencoded-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bodyparser-urlencoded-options"}},[e._v("#")]),e._v(" bodyParser.urlencoded([options])")]),e._v(" "),a("p",[e._v("Returns middleware that only parses "),a("code",[e._v("urlencoded")]),e._v(" bodies and only looks at"),a("br"),e._v("\nrequests where the "),a("code",[e._v("Content-Type")]),e._v(" header matches the "),a("code",[e._v("type")]),e._v(" option. This"),a("br"),e._v("\nparser accepts only UTF-8 encoding of the body and supports automatic"),a("br"),e._v("\ninflation of "),a("code",[e._v("gzip")]),e._v(" and "),a("code",[e._v("deflate")]),e._v(" encodings.")]),e._v(" "),a("p",[e._v("A new "),a("code",[e._v("body")]),e._v(" object containing the parsed data is populated on the "),a("code",[e._v("request")]),a("br"),e._v("\nobject after the middleware (i.e. "),a("code",[e._v("req.body")]),e._v("). This object will contain"),a("br"),e._v("\nkey-value pairs, where the value can be a string or array (when "),a("code",[e._v("extended")]),e._v(" is"),a("br"),e._v(" "),a("code",[e._v("false")]),e._v("), or any type (when "),a("code",[e._v("extended")]),e._v(" is "),a("code",[e._v("true")]),e._v(").")]),e._v(" "),a("h4",{attrs:{id:"options-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-4"}},[e._v("#")]),e._v(" Options")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("urlencoded")]),e._v(" function takes an optional "),a("code",[e._v("options")]),e._v(" object that may contain"),a("br"),e._v("\nany of the following keys:")]),e._v(" "),a("h5",{attrs:{id:"extended"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extended"}},[e._v("#")]),e._v(" extended")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("extended")]),e._v(" option allows to choose between parsing the URL-encoded data"),a("br"),e._v("\nwith the "),a("code",[e._v("querystring")]),e._v(" library (when "),a("code",[e._v("false")]),e._v(") or the "),a("code",[e._v("qs")]),e._v(" library (when"),a("br"),e._v(" "),a("code",[e._v("true")]),e._v('). The "extended" syntax allows for rich objects and arrays to be'),a("br"),e._v("\nencoded into the URL-encoded format, allowing for a JSON-like experience"),a("br"),e._v("\nwith URL-encoded. For more information, please"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/qs#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("see the qs library"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Defaults to "),a("code",[e._v("true")]),e._v(", but using the default has been deprecated. Please"),a("br"),e._v("\nresearch into the difference between "),a("code",[e._v("qs")]),e._v(" and "),a("code",[e._v("querystring")]),e._v(" and choose the"),a("br"),e._v("\nappropriate setting.")]),e._v(" "),a("h5",{attrs:{id:"inflate-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inflate-4"}},[e._v("#")]),e._v(" inflate")]),e._v(" "),a("p",[e._v("When set to "),a("code",[e._v("true")]),e._v(", then deflated (compressed) bodies will be inflated; when"),a("br"),e._v(" "),a("code",[e._v("false")]),e._v(", deflated bodies are rejected. Defaults to "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"limit-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit-4"}},[e._v("#")]),e._v(" limit")]),e._v(" "),a("p",[e._v("Controls the maximum request body size. If this is a number, then the value"),a("br"),e._v("\nspecifies the number of bytes; if it is a string, the value is passed to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/bytes",target:"_blank",rel:"noopener noreferrer"}},[e._v("bytes"),a("OutboundLink")],1),e._v(" library for parsing. Defaults"),a("br"),e._v("\nto "),a("code",[e._v("'100kb'")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"parameterlimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameterlimit"}},[e._v("#")]),e._v(" parameterLimit")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("parameterLimit")]),e._v(" option controls the maximum number of parameters that"),a("br"),e._v("\nare allowed in the URL-encoded data. If a request contains more parameters"),a("br"),e._v("\nthan this value, a 413 will be returned to the client. Defaults to "),a("code",[e._v("1000")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"type-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-4"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("type")]),e._v(" option is used to determine what media type the middleware will"),a("br"),e._v("\nparse. This option can be a string, array of strings, or a function. If not"),a("br"),e._v("\na function, "),a("code",[e._v("type")]),e._v(" option is passed directly to the"),a("br"),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/type-is#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("type-is"),a("OutboundLink")],1),e._v(" library and this can"),a("br"),e._v("\nbe an extension name (like "),a("code",[e._v("urlencoded")]),e._v("), a mime type (like"),a("br"),e._v(" "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v("), or a mime type with a wildcard (like"),a("br"),e._v(" "),a("code",[e._v("*/x-www-form-urlencoded")]),e._v("). If a function, the "),a("code",[e._v("type")]),e._v(" option is called as"),a("br"),e._v(" "),a("code",[e._v("fn(req)")]),e._v(" and the request is parsed if it returns a truthy value. Defaults"),a("br"),e._v("\nto "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v(".")]),e._v(" "),a("h5",{attrs:{id:"verify-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-4"}},[e._v("#")]),e._v(" verify")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("verify")]),e._v(" option, if supplied, is called as "),a("code",[e._v("verify(req, res, buf, encoding)")]),e._v(","),a("br"),e._v("\nwhere "),a("code",[e._v("buf")]),e._v(" is a "),a("code",[e._v("Buffer")]),e._v(" of the raw request body and "),a("code",[e._v("encoding")]),e._v(" is the"),a("br"),e._v("\nencoding of the request. The parsing can be aborted by throwing an error.")]),e._v(" "),a("h2",{attrs:{id:"errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#errors"}},[e._v("#")]),e._v(" Errors")]),e._v(" "),a("p",[e._v("The middlewares provided by this module create errors depending on the error"),a("br"),e._v("\ncondition during parsing. The errors will typically have a "),a("code",[e._v("status")]),e._v("/"),a("code",[e._v("statusCode")]),a("br"),e._v("\nproperty that contains the suggested HTTP response code, an "),a("code",[e._v("expose")]),e._v(" property"),a("br"),e._v("\nto determine if the "),a("code",[e._v("message")]),e._v(" property should be displayed to the client, a"),a("br"),e._v(" "),a("code",[e._v("type")]),e._v(" property to determine the type of error without matching against the"),a("br"),e._v(" "),a("code",[e._v("message")]),e._v(", and a "),a("code",[e._v("body")]),e._v(" property containing the read body, if available.")]),e._v(" "),a("p",[e._v("The following are the common errors emitted, though any error can come through"),a("br"),e._v("\nfor various reasons.")]),e._v(" "),a("h3",{attrs:{id:"content-encoding-unsupported"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#content-encoding-unsupported"}},[e._v("#")]),e._v(" content encoding unsupported")]),e._v(" "),a("p",[e._v("This error will occur when the request had a "),a("code",[e._v("Content-Encoding")]),e._v(" header that"),a("br"),e._v('\ncontained an encoding but the "inflation" option was set to '),a("code",[e._v("false")]),e._v(". The"),a("br"),e._v(" "),a("code",[e._v("status")]),e._v(" property is set to "),a("code",[e._v("415")]),e._v(", the "),a("code",[e._v("type")]),e._v(" property is set to"),a("br"),e._v(" "),a("code",[e._v("'encoding.unsupported'")]),e._v(", and the "),a("code",[e._v("charset")]),e._v(" property will be set to the"),a("br"),e._v("\nencoding that is unsupported.")]),e._v(" "),a("h3",{attrs:{id:"request-aborted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-aborted"}},[e._v("#")]),e._v(" request aborted")]),e._v(" "),a("p",[e._v("This error will occur when the request is aborted by the client before reading"),a("br"),e._v("\nthe body has finished. The "),a("code",[e._v("received")]),e._v(" property will be set to the number of"),a("br"),e._v("\nbytes received before the request was aborted and the "),a("code",[e._v("expected")]),e._v(" property is"),a("br"),e._v("\nset to the number of expected bytes. The "),a("code",[e._v("status")]),e._v(" property is set to "),a("code",[e._v("400")]),a("br"),e._v("\nand "),a("code",[e._v("type")]),e._v(" property is set to "),a("code",[e._v("'request.aborted'")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"request-entity-too-large"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-entity-too-large"}},[e._v("#")]),e._v(" request entity too large")]),e._v(" "),a("p",[e._v('This error will occur when the request body\'s size is larger than the "limit"'),a("br"),e._v("\noption. The "),a("code",[e._v("limit")]),e._v(" property will be set to the byte limit and the "),a("code",[e._v("length")]),a("br"),e._v("\nproperty will be set to the request body's length. The "),a("code",[e._v("status")]),e._v(" property is"),a("br"),e._v("\nset to "),a("code",[e._v("413")]),e._v(" and the "),a("code",[e._v("type")]),e._v(" property is set to "),a("code",[e._v("'entity.too.large'")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"request-size-did-not-match-content-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-size-did-not-match-content-length"}},[e._v("#")]),e._v(" request size did not match content length")]),e._v(" "),a("p",[e._v("This error will occur when the request's length did not match the length from"),a("br"),e._v("\nthe "),a("code",[e._v("Content-Length")]),e._v(" header. This typically occurs when the request is malformed,"),a("br"),e._v("\ntypically when the "),a("code",[e._v("Content-Length")]),e._v(" header was calculated based on characters"),a("br"),e._v("\ninstead of bytes. The "),a("code",[e._v("status")]),e._v(" property is set to "),a("code",[e._v("400")]),e._v(" and the "),a("code",[e._v("type")]),e._v(" property"),a("br"),e._v("\nis set to "),a("code",[e._v("'request.size.invalid'")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"stream-encoding-should-not-be-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-encoding-should-not-be-set"}},[e._v("#")]),e._v(" stream encoding should not be set")]),e._v(" "),a("p",[e._v("This error will occur when something called the "),a("code",[e._v("req.setEncoding")]),e._v(" method prior"),a("br"),e._v("\nto this middleware. This module operates directly on bytes only and you cannot"),a("br"),e._v("\ncall "),a("code",[e._v("req.setEncoding")]),e._v(" when using this module. The "),a("code",[e._v("status")]),e._v(" property is set to"),a("br"),e._v(" "),a("code",[e._v("500")]),e._v(" and the "),a("code",[e._v("type")]),e._v(" property is set to "),a("code",[e._v("'stream.encoding.set'")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"too-many-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#too-many-parameters"}},[e._v("#")]),e._v(" too many parameters")]),e._v(" "),a("p",[e._v("This error will occur when the content of the request exceeds the configured"),a("br"),e._v(" "),a("code",[e._v("parameterLimit")]),e._v(" for the "),a("code",[e._v("urlencoded")]),e._v(" parser. The "),a("code",[e._v("status")]),e._v(" property is set to"),a("br"),e._v(" "),a("code",[e._v("413")]),e._v(" and the "),a("code",[e._v("type")]),e._v(" property is set to "),a("code",[e._v("'parameters.too.many'")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"unsupported-charset-bogus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unsupported-charset-bogus"}},[e._v("#")]),e._v(' unsupported charset "BOGUS"')]),e._v(" "),a("p",[e._v("This error will occur when the request had a charset parameter in the"),a("br"),e._v(" "),a("code",[e._v("Content-Type")]),e._v(" header, but the "),a("code",[e._v("iconv-lite")]),e._v(" module does not support it OR the"),a("br"),e._v("\nparser does not support it. The charset is contained in the message as well"),a("br"),e._v("\nas in the "),a("code",[e._v("charset")]),e._v(" property. The "),a("code",[e._v("status")]),e._v(" property is set to "),a("code",[e._v("415")]),e._v(", the"),a("br"),e._v(" "),a("code",[e._v("type")]),e._v(" property is set to "),a("code",[e._v("'charset.unsupported'")]),e._v(", and the "),a("code",[e._v("charset")]),e._v(" property"),a("br"),e._v("\nis set to the charset that is unsupported.")]),e._v(" "),a("h3",{attrs:{id:"unsupported-content-encoding-bogus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unsupported-content-encoding-bogus"}},[e._v("#")]),e._v(' unsupported content encoding "bogus"')]),e._v(" "),a("p",[e._v("This error will occur when the request had a "),a("code",[e._v("Content-Encoding")]),e._v(" header that"),a("br"),e._v("\ncontained an unsupported encoding. The encoding is contained in the message"),a("br"),e._v("\nas well as in the "),a("code",[e._v("encoding")]),e._v(" property. The "),a("code",[e._v("status")]),e._v(" property is set to "),a("code",[e._v("415")]),e._v(","),a("br"),e._v("\nthe "),a("code",[e._v("type")]),e._v(" property is set to "),a("code",[e._v("'encoding.unsupported'")]),e._v(", and the "),a("code",[e._v("encoding")]),a("br"),e._v("\nproperty is set to the encoding that is unsupported.")]),e._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("h3",{attrs:{id:"express-connect-top-level-generic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-connect-top-level-generic"}},[e._v("#")]),e._v(" Express/Connect top-level generic")]),e._v(" "),a("p",[e._v("This example demonstrates adding a generic JSON and URL-encoded parser as a"),a("br"),e._v("\ntop-level middleware, which will parse the bodies of all incoming requests."),a("br"),e._v("\nThis is the simplest setup.")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" bodyParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'body-parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parse application/x-www-form-urlencoded")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("urlencoded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" extended"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parse application/json")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Content-Type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'text/plain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'you posted:\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("h3",{attrs:{id:"express-route-specific"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-route-specific"}},[e._v("#")]),e._v(" Express route-specific")]),e._v(" "),a("p",[e._v("This example demonstrates adding body parsers specifically to the routes that"),a("br"),e._v("\nneed them. In general, this is the most recommended way to use body-parser with"),a("br"),e._v("\nExpress.")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" bodyParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'body-parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// create application/json parser")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" jsonParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// create application/x-www-form-urlencoded parser")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" urlencodedParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("urlencoded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" extended"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// POST /login gets urlencoded bodies")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" urlencodedParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'welcome, '")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// POST /api/users gets JSON bodies")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/api/users'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" jsonParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// create user in req.body")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("h3",{attrs:{id:"change-accepted-type-for-parsers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-accepted-type-for-parsers"}},[e._v("#")]),e._v(" Change accepted type for parsers")]),e._v(" "),a("p",[e._v("All the parsers accept a "),a("code",[e._v("type")]),e._v(" option which allows you to change the"),a("br"),e._v(" "),a("code",[e._v("Content-Type")]),e._v(" that the middleware will parse.")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" bodyParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'body-parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parse various different custom JSON types as JSON")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'application/*+json'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parse some custom thing into a Buffer")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("raw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'application/vnd.custom-type'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parse an HTML body into a string")]),e._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("bodyParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'text/html'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" License")]),e._v(" "),a("p",[a("a",{attrs:{href:"LICENSE"}},[e._v("MIT")])])])}),[],!1,null,null,null);t.default=r.exports}}]);