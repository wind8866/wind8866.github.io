(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{416:function(t,a,s){"use strict";s.r(a);var n=s(44),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[toc]")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),s("h3",{attrs:{id:"函数的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的特性"}},[t._v("#")]),t._v(" 函数的特性")]),t._v(" "),s("p",[t._v("函数可重复声明，后面的会覆盖前面的声明"),s("br"),t._v("\n函数声明会提前到代码块最上面"),s("br"),t._v("\n函数内的作用域"),s("br"),t._v("\n函数执行时的作用域为声明时所在作用域，与当前运行的作用域无关。"),s("br"),t._v("\n函数内的this为当前执行环境的this，与定义环境无关。"),s("br"),t._v("\n函数参数是按值传递，复合类型的值是引用地址。"),s("br"),t._v("\n函数内部有arguments对象，arguments.length返回参数个数，arguments.callee返回原函数")]),t._v(" "),s("h3",{attrs:{id:"函数的创建方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的创建方式"}},[t._v("#")]),t._v(" 函数的创建方式")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数表达式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fun "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'return x + y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 箭头函数")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"立即调用的函数表达式iife"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即调用的函数表达式iife"}},[t._v("#")]),t._v(" 立即调用的函数表达式IIFE")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("作用")]),t._v(" "),s("ul",[s("li",[t._v("不必为函数命名，避免了污染全局变量")]),t._v(" "),s("li",[t._v("IIFE 内部形成了一个单独的作用域，可以封装一些外部无法读取的私有变量。")])]),t._v(" "),s("h3",{attrs:{id:"理解闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解闭包"}},[t._v("#")]),t._v(" 理解闭包")]),t._v(" "),s("h4",{attrs:{id:"闭包是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包是如何实现的"}},[t._v("#")]),t._v(" 闭包是如何实现的")]),t._v(" "),s("p",[t._v("函数内的作用域是局部的，函数外不能访问内部的变量"),s("br"),t._v("\n函数的作用域为函数声明时的作用域"),s("br"),t._v("\n那么如果在函数wrap内部声明的函数inner，inner函数的作用域链中就包括wrap的作用域，如果把它返回到global，那么global就可以访问inner内的变量。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" inner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" wrapInner "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapInner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n")])])]),s("h4",{attrs:{id:"闭包的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包的作用"}},[t._v("#")]),t._v(" 闭包的作用")]),t._v(" "),s("ul",[s("li",[t._v("可以读取函数内部的变量")]),t._v(" "),s("li",[t._v("让这些变量始终保持在内存中")]),t._v(" "),s("li",[t._v("封装对象的私有属性和私有方法")])]),t._v(" "),s("h3",{attrs:{id:"eval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eval"}},[t._v("#")]),t._v(" eval")]),t._v(" "),s("p",[t._v("eval接受字符串，将其当作语句执行。"),s("br"),t._v("\neval没有自己的作用域，都在当前作用域内执行，因此可能会修改当前作用域的变量的值，造成安全问题。"),s("br"),t._v("\n不建议使用")]),t._v(" "),s("h2",{attrs:{id:"es6有哪些改进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6有哪些改进"}},[t._v("#")]),t._v(" ES6有哪些改进")]),t._v(" "),s("ul",[s("li",[t._v("参数可以设置默认值\n"),s("ul",[s("li",[t._v("根据是否等于undefined判断是否使用默认值")]),t._v(" "),s("li",[t._v("设置默认值后不被计入预期参数个数")]),t._v(" "),s("li",[t._v("参数的设置默认值也会形成作用域")])])]),t._v(" "),s("li",[t._v("rest参数\n"),s("ul",[s("li",[t._v("定义时只能放在最后一个参数")])])]),t._v(" "),s("li",[t._v("严格模式\n"),s("ul",[s("li",[t._v("规定只要函数参数使用了默认值、解构赋值、或者扩展运算符，那么函数内部就不能显式设定为严格模式，否则会报错。")])])]),t._v(" "),s("li",[t._v("箭头函数\n"),s("ul",[s("li",[t._v("简化了函数")]),t._v(" "),s("li",[t._v("this指向定义时所在环境，箭头函数没有自己的this")]),t._v(" "),s("li",[t._v("不可使用arguments")]),t._v(" "),s("li",[t._v("不可使用yield")]),t._v(" "),s("li",[t._v("不适用于对象的方法中，所以vue中使用箭头函数会找不到this，因为指向了全局")]),t._v(" "),s("li",[t._v("动态this时也不适用箭头函数，总之\n"),s("ul",[s("li",[t._v("如果不涉及this，用箭头函数")]),t._v(" "),s("li",[t._v("如果使用this，且明确目标this指向定义环境，那么使用箭头函数")]),t._v(" "),s("li",[t._v("否则使用普通函数定义")])])])])]),t._v(" "),s("li",[t._v("尾调用优化\n"),s("ul",[s("li",[t._v("指某个函数的最后一步是调用另一个函数")]),t._v(" "),s("li",[t._v("能够符合尾调用优化的条件是最后一步执行不需要当前函数作用域内的其他变量")]),t._v(" "),s("li",[t._v("尾递归优化")])])]),t._v(" "),s("li",[t._v("参数最后可有一个逗号")]),t._v(" "),s("li",[t._v("Function.prototype.toString()不再省略空格和注释")]),t._v(" "),s("li",[t._v("catch 命令的参数可省略")])]),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("h2",{attrs:{id:"待阅读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#待阅读"}},[t._v("#")]),t._v(" 待阅读")]),t._v(" "),s("ul",[s("li",[t._v("再看一遍有关尾调用优化的内容")])]),t._v(" "),s("h2",{attrs:{id:"问题解答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题解答"}},[t._v("#")]),t._v(" 问题解答")]),t._v(" "),s("h2",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法(6⃣️ === ES6)")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("分类")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("name")]),t._v(" "),s("td",[t._v("函数名,可用在传递的参数是函数时用到")]),t._v(" "),s("td",[t._v("实例属性")])]),t._v(" "),s("tr",[s("td",[t._v("length")]),t._v(" "),s("td",[t._v("预期参数个数，可用在方法重载")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("constructor")]),t._v(" "),s("td",[t._v("返回原型构造方法")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("toString()")]),t._v(" "),s("td",[t._v("返回函数源码")]),t._v(" "),s("td",[t._v("实例方法")])]),t._v(" "),s("tr",[s("td",[t._v("bind()")]),t._v(" "),s("td",[t._v("改变this，不执行只返回一个新函数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("call()")]),t._v(" "),s("td",[t._v("改变this，从第二个参数开始为传递给函数的参数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("apply()")]),t._v(" "),s("td",[t._v("与call类似，第二个参数为数组")]),t._v(" "),s("td")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);