(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{412:function(t,a,s){"use strict";s.r(a);var n=s(44),v=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[toc]"),s("br"),t._v("\n该文章记录number的基础支持，用法")]),t._v(" "),s("h2",{attrs:{id:"概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("ul",[s("li",[t._v("[x] parseInt(0.0000000005)// 5")]),t._v(" "),s("li",[t._v("[x] isFinite()")]),t._v(" "),s("li",[t._v("[x] isNaN()")]),t._v(" "),s("li",[t._v("[ ] parseInt()、parseFloat()、Number()区别")]),t._v(" "),s("li",[t._v("[ ] 数据类型的判断与转换")])]),t._v(" "),s("h4",{attrs:{id:"parseint-0-0000000005-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint-0-0000000005-5"}},[t._v("#")]),t._v(" parseInt(0.0000000005)// 5")]),t._v(" "),s("p",[t._v("下面知识点里提到了“小数点后的零多于5个自动将其转化为科学技术法表示”。"),s("br"),t._v("\n所以")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000000005")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换为5e-10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5e-10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换为字符串变成了parseInt(5)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000000005")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以返回结果为5")]),t._v("\n")])])]),s("h4",{attrs:{id:"parseint-、parsefloat-、number-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint-、parsefloat-、number-区别"}},[t._v("#")]),t._v(" parseInt()、parseFloat()、Number()区别")]),t._v(" "),s("p",[t._v("Number()可以接收任意类型的数进行转换，而另外两个则先调用String()将其转换成字符串")]),t._v(" "),s("p",[t._v("Number()在转换字符串时必须全部可转换，否则返回NaN，而另外两者只转换能够转换的。")]),t._v(" "),s("p",[t._v("Number()可以识别二进制八进制十六进制的前缀符号，而其他两个只能识别十六进制的0x(0X)")]),t._v(" "),s("h4",{attrs:{id:"数值的进制的表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值的进制的表示"}},[t._v("#")]),t._v(" 数值的进制的表示")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("进制数")]),t._v(" "),s("th",[t._v("前缀")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("10")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("0(不推荐)、0o、0O")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("0x、0X")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("0b、0B")])])])]),t._v(" "),s("h4",{attrs:{id:"特殊值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊值"}},[t._v("#")]),t._v(" 特殊值")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("值")]),t._v(" "),s("th",[t._v("如何得到")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Infinity")]),t._v(" "),s("td",[s("code",[t._v("8 / 0")]),s("br"),s("code",[t._v("8 / +0")]),s("br"),s("code",[t._v("Infinity / 0")]),s("br"),s("code",[t._v("Infinty + Infinity")]),s("br"),s("code",[t._v("Infinty * Infinity")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("-Infinity")]),t._v(" "),s("td",[s("code",[t._v("9 / -0")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("NaN")]),t._v(" "),s("td",[s("code",[t._v("0 / 0")]),s("br"),s("code",[t._v("5 - 'x'")]),s("br"),s("code",[t._v("0 * Infinty")]),s("br"),s("code",[t._v("Infinty - Infinity")]),s("br"),s("code",[t._v("Infinty / Infinity")])]),t._v(" "),s("td",[s("code",[t._v("NaN !== NaN")]),s("br"),t._v("NaN不等于任何值")])]),t._v(" "),s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[s("code",[t._v("0 / Infinity")]),s("br"),s("code",[t._v("9 / Infinity")])]),t._v(" "),s("td",[t._v("零有正零负零之分，二进制表示不同（仅符号位）计算机中相比较是相同的")])])])]),t._v(" "),s("h4",{attrs:{id:"范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围"}},[t._v("#")]),t._v(" 范围")]),t._v(" "),s("p",[t._v("整数可以表示的范围"),s("code",[t._v("[-2 ** 53, 2 ** 53]")])]),t._v(" "),s("h2",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法(6⃣️ === ES6)")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("分类")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("new Number(num)")]),t._v(" "),s("td",[t._v("不推荐，num不是数值自动转换")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Number(num)")]),t._v(" "),s("td",[t._v("num不为数值自动转换，返回基础类型值而非对象")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("window.isNaN(value)")]),t._v(" "),s("td",[t._v("对value进行转换后判断是否是NaN")]),t._v(" "),s("td",[t._v("全局方法")])]),t._v(" "),s("tr",[s("td",[t._v("window.parseInt(str, n)")]),t._v(" "),s("td",[t._v("将字符串转成整数，自动去除前后缀空白符"),s("br"),t._v("如果遇到不可转换的值，只返回前面已转化的"),s("br"),t._v("如果"),s("code",[t._v("str")]),t._v("不是字符串，调用"),s("code",[t._v("String(str)")]),s("br"),t._v("如果都不能转成数值，返回"),s("code",[t._v("NaN")]),s("br"),s("code",[t._v("0x")]),t._v("或"),s("code",[t._v("0X")]),t._v("开头的识别为16进制，其他进制不行"),s("br"),t._v("注意科学计数法"),s("code",[t._v("parseInt(0.0000000005)// 5")]),s("br"),s("code",[t._v("n")]),t._v("为可选，表示str的进制，转换不成数值就忽略")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("window.parseFloat()")]),t._v(" "),s("td",[t._v("可以识别科学计数法e")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("window.isNaN(val)")]),t._v(" "),s("td",[t._v("如果val不为数字，先调用Number()"),s("br"),t._v("使用前先判断是否为Number类型"),s("br"),t._v("因为"),s("code",[t._v("NaN != NaN")]),t._v("，所以利用"),s("code",[t._v("val !== val ? 'is NaN' : 'not's NaN'")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("window.isFinite(val)")]),t._v(" "),s("td",[t._v("判断是否时正常值，val不为数值先调用Number()")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("POSITIVE_INFINITY")]),t._v(" "),s("td",[t._v("正无限"),s("code",[t._v("Infinity")])]),t._v(" "),s("td",[t._v("Number的属性")])]),t._v(" "),s("tr",[s("td",[t._v("NEGATIVE_INFINITY")]),t._v(" "),s("td",[t._v("负无限"),s("code",[t._v("-Infinity")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Number.NaN")]),t._v(" "),s("td",[t._v("NaN")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MAX_VALUE")]),t._v(" "),s("td",[t._v("表示最大的正数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MIN_VALUE")]),t._v(" "),s("td",[t._v("表示最小的正数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MAX_SAFE_INTEGER")]),t._v(" "),s("td",[t._v("能够精确表示的最大整数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MIN_SAFE_INTEGER")]),t._v(" "),s("td",[t._v("能够精确表示的最小整数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("EPSILON6⃣️")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("isNaN()6⃣️")]),t._v(" "),s("td",[t._v("与window.isNaN不同，不进行转换，非Number直接返回false")]),t._v(" "),s("td",[t._v("方法")])]),t._v(" "),s("tr",[s("td",[t._v("Number.isFinite()6⃣️")]),t._v(" "),s("td",[t._v("与"),s("code",[t._v("window.isFinite")]),t._v("不同，不进行转换，非Number直接返回false")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Number.parseInt()6⃣️")]),t._v(" "),s("td",[s("code",[t._v("Number.parseInt === window.parseInt// true")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Number.parseFloat()6⃣️")]),t._v(" "),s("td",[s("code",[t._v("Number.parseFloat === window.parseFloat// true")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Number.isInteger()6⃣️")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Number.isSafeInteger()6⃣️")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("toSting(n)")]),t._v(" "),s("td",[t._v("转换成n进制的字符串，"),s("code",[t._v("n")]),t._v("可选，默认"),s("code",[t._v("10")])]),t._v(" "),s("td",[t._v("实例方法")])]),t._v(" "),s("tr",[s("td",[t._v("toFixed(n)")]),t._v(" "),s("td",[t._v("转换成"),s("code",[t._v("n")]),t._v("位小数，使用四舍五入方法，位数不够补零")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("toExponential(length)")]),t._v(" "),s("td",[t._v("指定小数位数为"),s("code",[t._v("length")]),t._v("，转换为科学计数法表示")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("toPrecision(length)")]),t._v(" "),s("td",[t._v("转换为指定位数的有效数字(从第一个不是零的数字起)")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"math-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math-api"}},[t._v("#")]),t._v(" Math API")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN Math"),s("OutboundLink")],1),s("br"),t._v("\n下面只给出常用")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法(6⃣️ === ES6)")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("分类")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Math.PI")]),t._v(" "),s("td",[t._v("𝝅")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.abs(x)")]),t._v(" "),s("td",[t._v("x的绝对值")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.ceil(x)")]),t._v(" "),s("td",[t._v("向上取整")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.floor(x)")]),t._v(" "),s("td",[t._v("向下取整")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.round(x)")]),t._v(" "),s("td",[t._v("四舍五入")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.max([x[,y[,…]]])")]),t._v(" "),s("td",[t._v("最大值")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.min([x[,y[,…]]])")]),t._v(" "),s("td",[t._v("最小值")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.pow(x,y)")]),t._v(" "),s("td",[t._v("x^y")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.random()")]),t._v(" "),s("td",[t._v("[0，1)伪随机数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.trunc()6⃣️")]),t._v(" "),s("td",[t._v("返回一个数的整数部分，非数值先用Number()转换")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.sign()6⃣️")]),t._v(" "),s("td",[t._v("正数：1"),s("br"),t._v("负数：-1"),s("br"),t._v("0：0"),s("br"),t._v("-0：-0"),s("br"),t._v("其他值：NaN")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.clz32()6⃣️")]),t._v(" "),s("td",[t._v("返回一个数的 32 位无符号整数形式有多少个前导 0。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.imul()6⃣️")]),t._v(" "),s("td",[t._v("方法返回两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Math.fround()6⃣️")]),t._v(" "),s("td",[t._v("Math.fround方法返回一个数的32位单精度浮点数形式。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("注意："),s("br"),t._v('\n四舍五入、向上取整、向下取整对于负数都是"反向"的。')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [2, -2, 2, -2]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, -2, 2, -3]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ceil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  [2, -1, 3, -2]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    Math.round(-1.6)返回-2，Math.ceil(-1.6)返回-1。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    Math.round(-2.4)返回-2，Math.floor(-2.4)返回-3。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以说明四舍五入与正负无关（取绝对值四舍五入后加符号），而向上取整即取相邻整数大的一个，向下取整取相邻整数小的一个。")]),t._v("\n")])])]),s("h2",{attrs:{id:"bug-debug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bug-debug"}},[t._v("#")]),t._v(" bug&debug")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("b123\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("o1919\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("xacfg\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上都报错：Uncaught SyntaxError: Invalid or unexpected token")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("017")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("019")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 19")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("087")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught SyntaxError: Decimals with leading zeros are not allowed in strict mode.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以不推荐八进制前缀0，推荐0x。严格模式下会报错")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于精度原因，toFixed和toPrecision都不能正确的进行四舍五入，如下面的12.45")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "12.4"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrecision")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "12.4"')]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);